{
	"info": {
		"_postman_id": "cf263ba6-72b1-44d4-b7a6-a7dd6d3fa324",
		"name": "DropboxAPITest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23587056"
	},
	"item": [
		{
			"name": "Upload test",
			"item": [
				{
					"name": "Upload a file to dropbox",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"file_path\", jsonData.path_display);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"Uploaded file name is correct\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(environment.file_name);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Dropbox-API-Arg",
								"value": "{\"path\": \"/{{file_name}}\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"contentType": "application/octet-stream",
									"type": "file",
									"src": "./files/test.txt"
								}
							]
						},
						"url": {
							"raw": "{{url_content}}/files/upload",
							"host": [
								"{{url_content}}"
							],
							"path": [
								"files",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post-test clean-up request: delete the added file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"tokenNeeded\", \"true\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"path\": \"{{file_path}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_api}}/files/delete_v2",
							"host": [
								"{{url_api}}"
							],
							"path": [
								"files",
								"delete_v2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete test",
			"item": [
				{
					"name": "Pre-test set-up: add a file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"file_path\", jsonData.path_display);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Dropbox-API-Arg",
								"value": "{\"path\": \"/{{file_name}}\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"contentType": "application/octet-stream",
									"type": "file",
									"src": "./files/test.txt"
								}
							]
						},
						"url": {
							"raw": "{{url_content}}/files/upload",
							"host": [
								"{{url_content}}"
							],
							"path": [
								"files",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a file from dropbox",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const path = pm.collectionVariables.get(\"file_path\");\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"The right file was deleted\", function (){\r",
									"    pm.expect(jsonData.metadata.path_display).to.eql(path);\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"tokenNeeded\", \"true\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"path\": \"{{file_path}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_api}}/files/delete_v2",
							"host": [
								"{{url_api}}"
							],
							"path": [
								"files",
								"delete_v2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get File Metadata test",
			"item": [
				{
					"name": "Pre-test set-up: add a file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"file_id\", jsonData.id);\r",
									"pm.collectionVariables.set(\"file_path\", jsonData.path_display);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Dropbox-API-Arg",
								"value": "{\"path\": \"/{{file_name}}\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"contentType": "application/octet-stream",
									"type": "file",
									"src": "./files/test.txt"
								}
							]
						},
						"url": {
							"raw": "{{url_content}}/files/upload",
							"host": [
								"{{url_content}}"
							],
							"path": [
								"files",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get file metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const id = pm.collectionVariables.get(\"file_id\");\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"The right file was displayed\", function (){\r",
									"    pm.expect(jsonData.id).to.eql(id);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"file\": \"{{file_id}}\"\r\n}"
						},
						"url": {
							"raw": "{{url_api}}/sharing/get_file_metadata",
							"host": [
								"{{url_api}}"
							],
							"path": [
								"sharing",
								"get_file_metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post-test clean-up request: delete the added file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"tokenNeeded\", \"true\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"path\": \"{{file_path}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_api}}/files/delete_v2",
							"host": [
								"{{url_api}}"
							],
							"path": [
								"files",
								"delete_v2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{BEARER_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const key = pm.collectionVariables.get(\"APP_KEY\");",
					"const secret = pm.collectionVariables.get(\"APP_SECRET\")",
					"const appInfo = Buffer.from(`${key}:${secret}`).toString(\"base64\");",
					"",
					"if (pm.collectionVariables.get(\"tokenNeeded\") === \"true\") {",
					"    pm.sendRequest({",
					"        url: 'https://api.dropbox.com/oauth2/token',",
					"        method: 'POST',",
					"        header: {",
					"            'Authorization': `Basic ${appInfo}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded'",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                {key: 'grant_type', value: 'refresh_token'},",
					"                {key: 'refresh_token', value: pm.collectionVariables.get(\"REFRESH_TOKEN\")}",
					"            ]",
					"        }",
					"    },",
					"        (err, res) => {",
					"            pm.collectionVariables.set(\"BEARER_TOKEN\", res.json().access_token)",
					"    });",
					"    pm.collectionVariables.set(\"tokenNeeded\", \"false\");",
					"} ",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "REFRESH_TOKEN",
			"value": "LMo_Gx7d90MAAAAAAAAAAXR65WtJ74oUYIT27sdmuhec0jIQvh2nImwyHz7OPgPZ",
			"type": "string"
		},
		{
			"key": "BEARER_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "file_path",
			"value": ""
		},
		{
			"key": "APP_KEY",
			"value": "09tsqplew5ysx7l",
			"type": "string"
		},
		{
			"key": "APP_SECRET",
			"value": "z9zdza0dbqj94cc",
			"type": "string"
		},
		{
			"key": "tokenNeeded",
			"value": "true",
			"type": "string"
		},
		{
			"key": "file_name",
			"value": ""
		},
		{
			"key": "file_id",
			"value": ""
		}
	]
}